<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JBレンタカー - J-4専用見積もり</title>
    <style>
        /* 全体の設定 */
        body {
            font-family: 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'メイリオ', sans-serif;
            background-color: #f2f2f2;
            color: #333;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            min-height: 100vh;
            padding: 15px;
            box-sizing: border-box;
        }

        /* ヘッダーとロゴ */
        .header {
            text-align: center;
            margin-bottom: 15px;
            width: 100%;
            max-width: 480px;
        }

        .logo {
            font-size: 28px;
            font-weight: bold;
            color: #0068e9;
            margin-bottom: 5px;
        }

        /* 展示車両バッジ */
        .exhibition-badge {
            background-color: #ff6b00;
            color: white;
            font-weight: bold;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 14px;
            margin-bottom: 15px;
            display: inline-block;
        }

        /* タイトル */
        h1 {
            color: #fff;
            font-size: 22px;
            text-align: center;
            margin: 0 0 15px;
            padding: 10px 15px;
            background-color: #0068e9;
            border-radius: 8px;
            width: 100%;
            max-width: 480px;
            box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
        }

        /* カード形式のコンテナ */
        .card {
            background-color: #fff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
            max-width: 480px;
            width: 100%;
            box-sizing: border-box;
            margin-bottom: 16px;
            border: 1px solid #eaeaea;
        }

        /* セクションタイトル */
        .section-title {
            font-size: 18px;
            color: #0068e9;
            margin-bottom: 12px;
            padding-bottom: 6px;
            border-bottom: 2px solid #ffc600;
        }

        /* 車両情報 */
        .car-info {
            background-color: #f9f9f9;
            padding: 12px;
            border-radius: 8px;
            margin-bottom: 15px;
            border-left: 4px solid #0068e9;
        }

        .car-name {
            font-weight: bold;
            font-size: 18px;
            margin-bottom: 8px;
            color: #0068e9;
        }

        .car-description {
            font-size: 14px;
            color: #555;
            line-height: 1.4;
        }

        /* フォームグループ */
        .form-group {
            margin-bottom: 16px;
        }

        label {
            font-weight: 600;
            margin-bottom: 6px;
            display: block;
            color: #333;
        }

        .tooltip {
            display: inline-block;
            margin-left: 5px;
            color: #0068e9;
            cursor: pointer;
            font-size: 16px;
        }

        .tooltip-text {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 6px;
            padding: 8px;
            font-size: 13px;
            z-index: 1;
            width: 250px;
            color: #333;
            box-shadow: 0 3px 6px rgba(0,0,0,0.1);
        }

        /* JavaScript用のショークラスを追加 */
        .tooltip-text.show {
            display: block;
        }
        
        /* デスクトップ用のホバー機能を維持 */
        @media (hover: hover) {
            .tooltip:hover + .tooltip-text {
                display: block;
            }
        }

        /* 入力フィールド */
        input[type="date"],
        input[type="number"],
        select {
            width: 100%;
            padding: 12px;
            margin-bottom: 6px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            box-sizing: border-box;
            background-color: #f9f9f9;
            transition: border-color 0.3s, box-shadow 0.3s;
        }

        input[type="date"]:focus,
        input[type="number"]:focus,
        select:focus {
            outline: none;
            border-color: #0068e9;
            box-shadow: 0 0 0 3px rgba(0, 104, 233, 0.2);
        }

        /* チェックボックスのスタイル */
        .checkbox-group {
            display: flex;
            flex-wrap: wrap;
            gap: 8px 16px;
            margin-top: 8px;
        }

        .checkbox-container {
            display: flex;
            align-items: center;
            flex: 1 0 40%;
            min-width: 180px;
        }

        .checkbox-container input[type="checkbox"] {
            margin-right: 8px;
            width: 16px;
            height: 16px;
            accent-color: #0068e9;
        }

        /* ボタン */
        button {
            width: 100%;
            padding: 14px;
            background-color: #0068e9;
            color: #fff;
            font-size: 18px;
            font-weight: bold;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s;
            margin-top: 8px;
            box-shadow: 0 4px 8px rgba(0, 104, 233, 0.3);
        }

        button:hover {
            background-color: #0051b5;
            transform: translateY(-2px);
        }

        button:active {
            transform: translateY(0);
        }

        /* 結果エリア */
        #result {
            display: none;
            transition: opacity 0.5s ease;
        }

        #result.visible {
            display: block;
            opacity: 1;
        }

        .result-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            padding-bottom: 8px;
            border-bottom: 1px solid #eee;
        }

        .result-row:last-child {
            border-bottom: none;
        }

        .result-label {
            font-weight: normal;
        }

        .result-value {
            font-weight: bold;
            color: #0068e9;
        }

        .total-row {
            font-size: 20px;
            color: #0068e9;
            font-weight: bold;
            margin-top: 12px;
            padding-top: 12px;
            border-top: 2px solid #0068e9;
        }

        /* テーマカラーのハイライト */
        .highlight {
            color: #0068e9;
            font-weight: bold;
        }

        /* ステップ表示 */
        .steps-container {
            display: flex;
            justify-content: space-between;
            width: 100%;
            max-width: 480px;
            margin-bottom: 15px;
        }

        .step {
            text-align: center;
            flex: 1;
        }

        .step-circle {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 28px;
            height: 28px;
            background-color: #ddd;
            color: #fff;
            border-radius: 50%;
            margin-bottom: 6px;
        }

        .step.active .step-circle {
            background-color: #0068e9;
        }

        .step-label {
            font-size: 13px;
            color: #666;
        }

        .step.active .step-label {
            color: #0068e9;
            font-weight: bold;
        }

        /* 問い合わせリンク */
        .inquiry-link {
            text-align: center;
            margin-top: 16px;
        }

        .button-link {
            display: inline-block;
            padding: 14px 20px;
            background-color: #ffc600;
            color: #333;
            text-decoration: none;
            font-size: 16px;
            font-weight: bold;
            border-radius: 8px;
            transition: background-color 0.3s, transform 0.2s;
            box-shadow: 0 4px 8px rgba(255, 198, 0, 0.3);
        }

        .button-link:hover {
            background-color: #ffb400;
            transform: translateY(-2px);
        }

        .button-link:active {
            transform: translateY(0);
        }

        /* アニメーション */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .card {
            animation: fadeIn 0.5s ease-out forwards;
        }

        /* 石巻駅前バッジ */
        .location-badge {
            background-color: #0068e9;
            color: white;
            font-size: 12px;
            padding: 4px 8px;
            border-radius: 4px;
            margin-top: 6px;
            display: inline-block;
        }

        /* 見積もり元情報 */
        .source-info {
            text-align: center;
            margin-top: 10px;
            font-size: 12px;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">JBレンタカー</div>
        <div class="exhibition-badge">石巻駅前展示車両</div>
    </div>

    <h1>&#x1F697; J-4専用見積もり</h1>

    <div class="steps-container">
        <div class="step active">
            <div class="step-circle">1</div>
            <div class="step-label">条件入力</div>
        </div>
        <div class="step">
            <div class="step-circle">2</div>
            <div class="step-label">見積結果</div>
        </div>
        <div class="step">
            <div class="step-circle">3</div>
            <div class="step-label">予約確認</div>
        </div>
    </div>

    <div class="card">
        <div class="car-info">
            <div class="car-name">J-4：小型乗用車</div>
            <div class="car-description">快適な乗り心地と十分な荷室スペースを兼ね備えた実用的な車両です。長距離ドライブでも疲れにくく、多目的にご利用いただけます。</div>
            <div class="location-badge">石巻駅前展示中</div>
        </div>

        <form id="rentalForm" onsubmit="event.preventDefault(); calculateAndShowResult();">
            <div class="section-title">基本情報</div>
            
            <div class="form-group">
                <label for="startDate">ご利用開始日 <span class="highlight">*</span></label>
                <input type="date" id="startDate" required>
                <div id="startDateError" class="error-message" style="color: red; display: none;">利用開始日を選択してください</div>
            </div>
            
            <div class="form-group">
                <label for="days">ご利用日数 <span class="highlight">*</span></label>
                <input type="number" id="days" min="7" max="365" value="7" step="1">
                <div id="daysError" class="error-message" style="color: red; display: none;">利用日数は7日以上で入力してください</div>
            </div>
            
            <div class="section-title">オプション</div>
            
            <div class="checkbox-group">
                <div class="checkbox-container">
                    <input type="checkbox" id="insurance">
                    <label for="insurance">車両保険</label>
                    <div class="tooltip">ⓘ</div>
                    <div class="tooltip-text">レンタカーの損傷や事故に対する保険です。</div>
                </div>
                
                <div class="checkbox-container">
                    <input type="checkbox" id="waiver">
                    <label for="waiver">免責補償</label>
                    <div class="tooltip">ⓘ</div>
                    <div class="tooltip-text">万が一の事故の際、自己負担額を軽減します。</div>
                </div>
                
                <div class="checkbox-container">
                    <input type="checkbox" id="tires">
                    <label for="tires">スタッドレスタイヤ</label>
                    <div class="tooltip">ⓘ</div>
                    <div class="tooltip-text">雪道や凍結した道路での安全走行に必要です。</div>
                </div>
                
                <div class="checkbox-container">
                    <input type="checkbox" id="etc">
                    <label for="etc">ETC</label>
                    <div class="tooltip">ⓘ</div>
                    <div class="tooltip-text">高速道路の料金所をスムーズに通過できます。ETCカードは別途ご用意ください。</div>
                </div>
                
                <div class="checkbox-container">
                    <input type="checkbox" id="gps">
                    <label for="gps">カーナビ</label>
                    <div class="tooltip">ⓘ</div>
                    <div class="tooltip-text">目的地への道順を案内します。</div>
                </div>
            </div>
            
            <button type="submit">見積もりを計算する</button>
        </form>
    </div>

    <div id="result" class="card">
        <div class="section-title">お見積もり結果</div>
        <div id="resultContent"></div>
        
        <div class="source-info">※石巻駅前展示車両からの見積もりです</div>
        
        <div class="inquiry-link">
            <a href="https://jb-rentacar.com/miyagi/?note=石巻駅前展示車両より見積を実施しました" target="_blank" class="button-link">
                予約手続きへ進む &#x27A1;
            </a>
        </div>
    </div>

    <!-- ツールチップのためのJavaScript -->
    <script>
        // ツールチップの機能を追加（タッチ/クリックサポート）
        document.addEventListener('DOMContentLoaded', function() {
            const tooltips = document.querySelectorAll('.tooltip');
            
            tooltips.forEach(tooltip => {
                tooltip.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    // 関連するツールチップテキストを探す
                    const tooltipText = this.nextElementSibling;
                    
                    // 他の開いているツールチップを閉じる
                    document.querySelectorAll('.tooltip-text.show').forEach(openTooltip => {
                        if (openTooltip !== tooltipText) {
                            openTooltip.classList.remove('show');
                        }
                    });
                    
                    // クリックされたツールチップを切り替える
                    tooltipText.classList.toggle('show');
                });
            });
            
            // ページの他の場所をクリックしたときにツールチップを閉じる
            document.addEventListener('click', function() {
                document.querySelectorAll('.tooltip-text.show').forEach(tooltip => {
                    tooltip.classList.remove('show');
                });
            });
        });
    </script>

    <script>
        // J-4クラス専用の料金テーブル
        const J4_RATE = [3380, 6760, 10140, 13520, 16900, 17480, 17480, 20860, 24240, 27620, 31000, 34380, 34960, 34960, 38340, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800, 39800];
        const ETC_NAV_RATE = [500, 1000, 1000, 1000, 1000, 1000, 1000, 1500, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000];
        const INS_WAIVER_RATE = [1000, 2000, 2000, 2000, 2000, 2000, 2000, 3000, 4000, 4000, 4000, 4000, 4000, 4000, 5000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000];
        const WINTER_TIRES_RATE = [1000, 2000, 3000, 3000, 3000, 3000, 3000, 4000, 5000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000];

        // 日付入力欄に今日の日付をデフォルトで設定
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date();
            const formattedDate = today.toISOString().split("T")[0];
            document.getElementById("startDate").value = formattedDate;
            
            // エラーメッセージをクリア
            document.getElementById("startDate").addEventListener("input", function() {
                document.getElementById("startDateError").style.display = "none";
            });
            
            document.getElementById("days").addEventListener("input", function() {
                document.getElementById("daysError").style.display = "none";
            });
        });

        function validateForm() {
            let valid = true;
            
            // 開始日のバリデーション
            const startDate = document.getElementById("startDate").value;
            if (!startDate) {
                document.getElementById("startDateError").style.display = "block";
                valid = false;
            }
            
            // 日数のバリデーション
            const days = parseInt(document.getElementById("days").value);
            if (isNaN(days) || days < 1) {
                document.getElementById("daysError").style.display = "block";
                valid = false;
            }
            
            return valid;
        }

        function calculateAndShowResult() {
            if (!validateForm()) {
                return;
            }
            
            // ステップ表示の更新
            const steps = document.querySelectorAll('.step');
            steps[0].classList.remove('active');
            steps[1].classList.add('active');
            
            const startDate = document.getElementById("startDate").value;
            const days = parseInt(document.getElementById("days").value);
            const insurance = document.getElementById("insurance").checked;
            const waiver = document.getElementById("waiver").checked;
            const tires = document.getElementById("tires").checked;
            const etc = document.getElementById("etc").checked;
            const gps = document.getElementById("gps").checked;

            let totalBaseRate = 0;
            let insuranceCost = 0;
            let waiverCost = 0;
            let tiresCost = 0;
            let etcCost = 0;
            let gpsCost = 0;
            let remainingDays = days;
            const maxDaysPerRate = 30;

            // 30日ごとに料金を計算
            while (remainingDays > 0) {
                const daysToCalculate = Math.min(remainingDays, maxDaysPerRate);
                const rateIndex = Math.min(daysToCalculate - 1, 29); // インデックスは0から始まる
                
                totalBaseRate += J4_RATE[rateIndex] || 0;
                insuranceCost += insurance ? (INS_WAIVER_RATE[rateIndex] || 0) : 0;
                waiverCost += waiver ? (INS_WAIVER_RATE[rateIndex] || 0) : 0;
                tiresCost += tires ? (WINTER_TIRES_RATE[rateIndex] || 0) : 0;
                etcCost += etc ? (ETC_NAV_RATE[rateIndex] || 0) : 0;
                gpsCost += gps ? (ETC_NAV_RATE[rateIndex] || 0) : 0;
                
                remainingDays -= daysToCalculate;
            }

            const subtotal = totalBaseRate + insuranceCost + waiverCost + tiresCost + etcCost + gpsCost;
            const tax = Math.round(subtotal * 0.1);
            const total = subtotal + tax;

            // 利用開始日と返却日
            const startDateObj = new Date(startDate);
            const returnDateObj = new Date(startDate);
            returnDateObj.setDate(startDateObj.getDate() + days);
            
            // 日付フォーマット
            const formatDate = (date) => {
                const year = date.getFullYear();
                const month = (date.getMonth() + 1).toString().padStart(2, '0');
                const day = date.getDate().toString().padStart(2, '0');
                const dayOfWeek = ['日', '月', '火', '水', '木', '金', '土'][date.getDay()];
                return `${year}年${month}月${day}日(${dayOfWeek})`;
            };
            
            const formattedStartDate = formatDate(startDateObj);
            const formattedReturnDate = formatDate(returnDateObj);

            // 結果表示
            const resultContent = document.getElementById("resultContent");
            resultContent.innerHTML = `
                <div class="car-info" style="margin-bottom: 12px;">
                    <div class="car-name">J-4：小型乗用車</div>
                    <div class="location-badge">石巻駅前展示中</div>
                </div>
                <div class="result-row">
                    <span class="result-label">ご利用開始日:</span>
                    <span class="result-value">${formattedStartDate}</span>
                </div>
                <div class="result-row">
                    <span class="result-label">ご返却日:</span>
                    <span class="result-value">${formattedReturnDate}</span>
                </div>
                <div class="result-row">
                    <span class="result-label">ご利用日数:</span>
                    <span class="result-value">${days}日間</span>
                </div>
                <div class="result-row">
                    <span class="result-label">基本料金:</span>
                    <span class="result-value">¥${totalBaseRate.toLocaleString()}</span>
                </div>
                ${insurance ? `
                <div class="result-row">
                    <span class="result-label">車両保険:</span>
                    <span class="result-value">¥${insuranceCost.toLocaleString()}</span>
                </div>` : ''}
                ${waiver ? `
                <div class="result-row">
                    <span class="result-label">免責補償:</span>
                    <span class="result-value">¥${waiverCost.toLocaleString()}</span>
                </div>` : ''}
                ${tires ? `
                <div class="result-row">
                    <span class="result-label">スタッドレスタイヤ:</span>
                    <span class="result-value">¥${tiresCost.toLocaleString()}</span>
                </div>` : ''}
                ${etc ? `
                <div class="result-row">
                    <span class="result-label">ETC:</span>
                    <span class="result-value">¥${etcCost.toLocaleString()}</span>
                </div>` : ''}
                ${gps ? `
                <div class="result-row">
                    <span class="result-label">カーナビ:</span>
                    <span class="result-value">¥${gpsCost.toLocaleString()}</span>
                </div>` : ''}
                <div class="result-row">
                    <span class="result-label">小計:</span>
                    <span class="result-value">¥${subtotal.toLocaleString()}</span>
                </div>
                <div class="result-row">
                    <span class="result-label">消費税(10%):</span>
                    <span class="result-value">¥${tax.toLocaleString()}</span>
                </div>
                <div class="result-row total-row">
                    <span class="result-label">合計金額:</span>
                    <span class="result-value">¥${total.toLocaleString()}</span>
                </div>
            `;

            // 結果エリアの表示
            const resultArea = document.getElementById("result");
            resultArea.style.display = "block";
            
            // スクロールして結果表示
            resultArea.scrollIntoView({ behavior: 'smooth' });
        }
    </script>
</body>
</html>
